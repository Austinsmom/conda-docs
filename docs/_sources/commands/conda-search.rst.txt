
.. _search_ref:

conda search
=======================

.. raw:: html

   <PRE>
   <!-- Manpage converted by man2html 3.0.1 -->
   <B>CONDA(1)</B>                         User Commands                        <B>CONDA(1)</B>
   
   
   
   NAME
          conda - conda search
   
   DESCRIPTION
          usage: conda search [-h] [-n ENVIRONMENT | -p PATH] [-i] [-C]
   
          [--platform PLATFORM] [--reverse-dependency] [--offline]
                 [-c  CHANNEL]  [--override-channels]  [--json] [--debug] [--ver‐
                 bose] [--use-local] [-k] [--envs]
   
          Search for packages and display associated information.
   
                 The input is a MatchSpec, a query language for  conda  packages.
                 See examples below.
   
   OPTIONS
      optional arguments:
          -h, --help
                 Show this help message and exit.
   
          -n ENVIRONMENT, --name ENVIRONMENT
                 Name of environment.
   
          -p PATH, --prefix PATH
                 Full path to environment prefix.
   
          -i, --info
                 Provide  detailed  information  about  each package.  Similar to
                 output of 'conda info package-name'.
   
          -C, --use-index-cache
                 Use cache of channel index files, even if it has expired.
   
          --platform PLATFORM
                 Search the given platform. Should be  formatted  like  'osx-64',
                 'linux-32',  'win-64',  and  so on. The default is to search the
                 current platform.
   
          --reverse-dependency
                 Perform a reverse dependency search. When using this  flag,  the
                 --full-name flag is recommended. Use 'conda info package' to see
                 the dependencies of a package.
   
          --offline
                 Offline mode, don't connect to the Internet.
   
          -c CHANNEL, --channel CHANNEL
                 Additional channel  to  search  for  packages.  These  are  URLs
                 searched  in  the  order  they  are given (including file:// for
                 local directories). Then, the defaults or channels from .condarc
                 are  searched (unless --override-channels is given). You can use
                 'defaults' to get the default packages for conda,  and  'system'
                 to  get  the  system  packages,  which  also takes .condarc into
                 account. You can also  use  any  name  and  the  .condarc  chan‐
                 nel_alias  value will be prepended. The default channel_alias is
                 http://conda.anaconda.org/.
   
          --override-channels
                 Do not search default or .condarc channels. Requires --channel.
   
          --json Report all output as json. Suitable for using conda programmati‐
                 cally.
   
          --debug
                 Show debug output.
   
          --verbose, -v
                 Use once for info, twice for debug, three times for trace.
   
          --use-local
                 Use locally built packages.
   
          -k, --insecure
                 Allow conda to perform "insecure" SSL connections and transfers.
                 Equivalent to setting 'ssl_verify' to 'false'.
   
          --envs Search all of the current user's environments. If run as  Admin‐
                 istrator (on Windows) or UID 0 (on unix), search all known envi‐
                 ronments on the system.
   
   EXAMPLES
          Search for a specific package named 'scikit-learn':
   
                 conda search scikit-learn
   
          Search for packages containing 'scikit' in the package name:
   
                 conda search *scikit*
   
          Note that your shell may expand '*' before handing the command over  to
          conda.   Therefore  it  is  sometimes necessary to use single or double
          quotes around the query.
   
                 conda search '*scikit' conda search "*scikit*"
   
          Search for packages for 64-bit Linux (by  default,  packages  for  your
          current platform are shown):
   
                 conda search numpy[subdir=linux-64]
   
          Search for a specific version of a package:
   
                 conda search 'numpy&gt;=1.12'
   
          Search for a package on a specific channel
   
                 conda   search   conda-forge::numpy  conda  search  'numpy[chan‐
                 nel=conda-forge, subdir=osx-64]'
   
   
   
   Anaconda, Inc.                    August 2018                         <B>CONDA(1)</B>
   </PRE>
