
.. _metapackage_ref:

conda metapackage
=======================

.. raw:: html

   <PRE>
   <!-- Manpage converted by man2html 3.0.1 -->
   <B>CONDA(1)</B>                         User Commands                        <B>CONDA(1)</B>
   
   
   
   NAME
          conda - conda metapackage
   
   DESCRIPTION
          usage: conda-metapackage [-h] [--no-anaconda-upload] [--token TOKEN]
   
          [--user USER] [--label LABELS]
                 [--build-number   BUILD_NUMBER]   [--build-string  BUILD_STRING]
                 [--dependencies  [DEPENDENCIES  [DEPENDENCIES  ...]]]    [--home
                 HOME]     [--license     LICENSE_NAME]    [--summary    SUMMARY]
                 [--entry-points [ENTRY_POINTS [ENTRY_POINTS ...]]]  [-c CHANNEL]
                 [--override-channels] name version
   
          Tool  for building conda metapackages.  A metapackage is a package with
          no files, only metadata.  They are typically used  to  collect  several
          packages together into a single package via dependencies.
   
          NOTE:  Metapackages  can  also be created by creating a recipe with the
          necessary metadata in the meta.yaml, but a metapackage can  be  created
          entirely from the command line with the conda metapackage command.
   
   OPTIONS
      positional arguments:
          name   Name of the created package.
   
          version
                 Version of the created package.
   
      optional arguments:
          -h, --help
                 Show this help message and exit.
   
          --no-anaconda-upload
                 Do not ask to upload the package to anaconda.org.
   
          --token TOKEN
                 Token to pass through to anaconda upload
   
          --user USER
                 User/organization to upload packages to on anaconda.org
   
          --label LABELS
                 Label argument to pass through to anaconda upload
   
          --build-number BUILD_NUMBER
                 Build number for the package (default is 0).
   
          --build-string BUILD_STRING
                 Build  string  for  the package (default is automatically gener‐
                 ated).
   
          --dependencies  [DEPENDENCIES  [DEPENDENCIES  ...]],  -d  [DEPENDENCIES
          [DEPENDENCIES ...]]
                 The  dependencies  of the package. To specify a version restric‐
                 tion for a dependency,  wrap  the  dependency  in  quotes,  like
                 'package &gt;=2.0'.
   
          --home HOME
                 The homepage for the metapackage.
   
          --license LICENSE_NAME
                 The license of the metapackage.
   
          --summary SUMMARY
                 Summary  of the package. Pass this in as a string on the command
                 line, like --summary 'A metapackage for X'. It is recommended to
                 use  single quotes if you are not doing variable substitution to
                 avoid interpretation of special characters.
   
          --entry-points [ENTRY_POINTS [ENTRY_POINTS ...]]
                 Python entry points to create automatically. They should use the
                 same   syntax   as   in   the   meta.yaml  of  a  recipe,  e.g.,
                 --entry-points bsdiff4=bsdiff4.cli:main_bsdiff4 will  create  an
                 entry  point  called  bsdiff4  that  calls bsdiff4.cli.main_bsd‐
                 iff4().
   
          -c CHANNEL, --channel CHANNEL
                 Additional channel  to  search  for  packages.  These  are  URLs
                 searched  in  the  order  they  are given (including file:// for
                 local directories). Then, the defaults or channels from .condarc
                 are  searched (unless --override-channels is given). You can use
                 'defaults' to get the default packages for conda,  and  'system'
                 to  get  the  system  packages,  which  also takes .condarc into
                 account. You can also  use  any  name  and  the  .condarc  chan‐
                 nel_alias  value will be prepended. The default channel_alias is
                 http://conda.anaconda.org/.
   
          --override-channels
                 Do not search default or .condarc channels. Requires --channel.
   
      conda commands available from other packages:
                 build convert  develop  env  index  inspect  metapackage  render
                 skeleton
   
   
   
   Anaconda, Inc.                  September 2018                        <B>CONDA(1)</B>
   </PRE>
